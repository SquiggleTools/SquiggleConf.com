---
import { links } from "~/data/links";
import Button from "./Button.astro";
import ContentArea from "./ContentArea.astro";
import Logo from "./Logo.astro";
import { currentYear } from "~/data/years";

function hrefProps(pathname: string) {
	return {
		class: Astro.url.pathname === pathname ? "" : "header-link-inactive",
		href: pathname,
		target: pathname.startsWith("https") ? "_blank" : undefined,
	};
}

interface Props {
	year?: number;
}

const { year } = Astro.props;
const logoHref = year === currentYear ? "/" : `/${year}`;
---

<header>
	<ContentArea class="header-content-area-mobile">
		<a class="logo" href={logoHref}><Logo year={year} /></a>

		<details id="details">
			<summary aria-label="Toggle header">â‰¡</summary>
			<div class="header-contents-mobile">
				<a {...hrefProps("/about")}>About</a>
				<a {...hrefProps("/articles")}>Articles</a>
				{year === currentYear && <a {...hrefProps("/schedule")}>Schedule</a>}
				<a {...hrefProps(links.shop)}>Shop</a>
				{year !== currentYear && <a {...hrefProps("/")}>{currentYear}</a>}
				<Button
					as="a"
					class="header-button"
					href={links.tickets}
					target="_blank"
					variant="accent">Get your ticket</Button
				>
			</div>
		</details>
	</ContentArea>

	<ContentArea class="header-content-area-wide" width="wide">
		<a class="logo" href={logoHref}><Logo year={year} /></a>
		<div class="header-links">
			<a {...hrefProps("/about")}>About</a>
			<a {...hrefProps("/articles")}>Articles</a>
			{year === currentYear && <a {...hrefProps("/schedule")}>Schedule</a>}
			<a {...hrefProps(links.shop)}>Shop</a>
			{year !== currentYear && <a {...hrefProps("/")}>{currentYear}</a>}
			<Button
				as="a"
				class="header-button"
				href={links.tickets}
				target="_blank"
				variant="accent">Get your ticket</Button
			>
		</div>
	</ContentArea>
</header>

<script>
	const details = document.querySelector(
		"details#details",
	) as HTMLDetailsElement;
	details.addEventListener("click", (event) => {
		if ((event.target as Partial<HTMLElement>).tagName === "A") {
			details.removeAttribute("open");
		}
	});
</script>

<style>
	header {
		border-bottom: 1px solid var(--colorBlue3);
		color: var(--colorWhiteIsh);
		background: var(--colorForeground);
		font-size: var(--fontSizeSmaller);
		padding: 1.5rem 0;
		width: 100%;
	}

	.logo {
		text-decoration: none;
	}

	.header-content-area-mobile {
		align-items: center;
		display: flex;
		justify-content: space-between;
		position: relative;
	}

	details {
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		z-index: 2;
		text-align: right;
	}

	summary {
		display: inline-block;
		cursor: pointer;
		font-size: 4rem;
		list-style: none;
		line-height: 0;
		padding: 1rem;
		position: absolute;
		right: 0;
		top: 0;
		z-index: 2;
	}

	summary::-webkit-details-marker {
		display: none;
	}

	.header-contents-mobile {
		--offsetTop: 4.5rem;
		background: var(--colorForeground);
		box-shadow: 0 0 1rem var(--colorTextShadow);
		display: flex;
		flex-direction: column;
		font-family: var(--fontFamilyHeading);
		font-size: var(--fontSizeLarge);
		font-weight: var(--fontWeightSemibold);
		font-weight: bold;
		gap: 0.5rem;
		line-height: 1.5;
		margin-top: 0;
		min-width: 20rem;
		padding: var(--offsetTop) 1rem 1.5rem;
		position: absolute;
		right: 0;
		text-align: right;
		width: 50%;
		z-index: 1;
	}

	.header-contents-mobile .header-button {
		align-self: end;
		margin-top: 0.5rem;
	}

	.header-content-area-wide {
		display: none;
	}

	.header-links {
		display: flex;
		align-items: center;
		font-weight: var(--fontWeightLight);
		gap: clamp(0.55rem, 1.25vw, 2rem);
	}

	.header-link-inactive {
		text-decoration: none;
	}

	.header-button {
		justify-content: center;
		margin-left: 0.35rem;
		text-wrap: nowrap;
	}

	@media (width >= 1117px) {
		.header-content-area-mobile {
			display: none;
		}

		.header-content-area-wide {
			align-items: center;
			display: flex;
			justify-content: space-between;
		}
	}
</style>
